#summary Supported Features
#labels Featured,Phase-Design

This is a list of things that are supported so far.

= Details =

  * @ManyToOne - object references. Stores id reference to another object in another Domain
  * @OneToMany (java.util.List only, must be generified, must be bi-directional with mappedBy parameter) - Collection support. Please be careful with collections, usually better to just query for what you want rather than attaching via collections.
  * @Inheritance - Only SINGLE_TABLE supported (only one that makes sense).
  * @MappedSuperClass - Useful for a common ID and timestamping class.
  * @Lob - stores lobs in S3 so make it as big as you want (up to 5GB).
  * @Id - MUST be a string
  * JPA Queries - see [JPAQuery] page
  * Integer and Long - no problems, all good.
  * Double - pads to 20 digits on each side of the decimal by default so fine for a lot of cases, but if you plan to use Double's, let us know so we can work it out perfectly. SimpleDB makes it hard to work with these numbers because it treats everything as a String.
  * BigDecimal - same problems as Double
  * String
  * no primitives yet! Please use wrappers only for now.
  * @Enumerated (ordinal and string)
  * @Column (name only)