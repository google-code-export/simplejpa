#summary All about querying with SimpleJPA
#labels Featured,Phase-Support

= Introduction =

SimpleJPA queries are a subset of the JPA spec due to the limitations of SimpleDB. Keep in mind that many things can be accomplished by doing things in a different way.

= Supported =

  * =
  * <
  * >
  * <=
  * >=
  * <> (not equal)
  * AND 
  * OR
  * IS NULL
  * IS NOT NULL
  * LIKE - only starts with due to SimpleDB limitations.

= Limitations =

  * Can only query on a single object type, no joins. 

= Examples =

{{{
query = entityManager.createQuery("select o from MyTestObject o where o.income = :income and o.age = :age");
query.setParameter("income", 50507.0);
query.setParameter("age", 12);
List<MyTestObject> obs = query.getResultList();
}}}

Can also query down object graph (1 level only right now):

{{{
query = entityManager.createQuery("select o from MyTestObject o where o.someOtherObject.name = :name");
query.setParameter("name", "finnigan");
List<MyTestObject> obs = query.getResultList();
}}}

But keep in mind, querying down the graph can be slow because it will query for the id's down the graph, then apply them to the top level query.

Like Query:

{{{
query = em.createQuery("select o from MyTestObject3 o where o.someField3 like :x");
query.setParameter("x", "fred and%"); 
List<MyTestObject3> obs = query.getResultList();
}}}

This will return all MyTestObject3's that start with "fred and".